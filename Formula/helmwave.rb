# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Helmwave < Formula
  desc "Helmwave is true release management for helm"
  homepage "https://helmwave.app/"
  version "0.40.1"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.1/helmwave_0.40.1_darwin_amd64.tar.gz"
      sha256 "f77ba283c74cd7d908dfe22c50382041aa590c1a1ba56a65e62340ac927f5fe4"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
    on_arm do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.1/helmwave_0.40.1_darwin_arm64.tar.gz"
      sha256 "1b19e4cd8e4166a94193b9ce9f69815817f039d6aac5afb501a175ae091957d3"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.1/helmwave_0.40.1_linux_amd64.tar.gz"
        sha256 "3a37dd5e398b0f046d42f3e88a2b02d2adbedeffae221fd630d9b29089ba08bd"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.1/helmwave_0.40.1_linux_arm64.tar.gz"
        sha256 "e4c30464dc20156f1dc77f3ab6937f73980c9c6089ce68948dc9ca4aaa9b0b0c"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
  end

  head "https://github.com/helmwave/helmwave.git", branch: "main"

  test do
    assert_match version.to_s, shell_output("#{bin/"helmwave"} --version")
  end
end

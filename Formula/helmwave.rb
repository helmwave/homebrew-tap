# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Helmwave < Formula
  desc "Helmwave is true release management for helm"
  homepage "https://helmwave.app/"
  version "0.41.0"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/helmwave/helmwave/releases/download/v0.41.0/helmwave_0.41.0_darwin_amd64.tar.gz"
      sha256 "efbea07d5db7cb2374c6f64db54212cf34a89b342c29d41ec3173e72d980a9ea"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
    on_arm do
      url "https://github.com/helmwave/helmwave/releases/download/v0.41.0/helmwave_0.41.0_darwin_arm64.tar.gz"
      sha256 "9f1ff714562a0043526aea30fbc3a5b20456b64adc39c70d1a01ac2a8fde7caa"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.41.0/helmwave_0.41.0_linux_amd64.tar.gz"
        sha256 "baee2ce970a69b2ca8ab752afb1da8891675e19cb8aee716fc93cf01a6fe9845"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.41.0/helmwave_0.41.0_linux_arm64.tar.gz"
        sha256 "edc5b93f6c75e961a2e335a2d8b1f20a880c0820a663e5224b97d0a0c90b0029"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
  end

  head "https://github.com/helmwave/helmwave.git", branch: "main"

  test do
    assert_match version.to_s, shell_output("#{bin/"helmwave"} --version")
  end
end

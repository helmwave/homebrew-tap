# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Helmwave < Formula
  desc "Helmwave is true release management for helm"
  homepage "https://helmwave.app/"
  version "0.41.1"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/helmwave/helmwave/releases/download/v0.41.1/helmwave_0.41.1_darwin_amd64.tar.gz"
      sha256 "ccb45dcae72947dce56fb4bf2c7506161e2a471a9b9685a473f02a3292e21449"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
    on_arm do
      url "https://github.com/helmwave/helmwave/releases/download/v0.41.1/helmwave_0.41.1_darwin_arm64.tar.gz"
      sha256 "0c1bf43a80ef130e3dc4d3936026effc010f4dff72962469b9bc16118fc5def8"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.41.1/helmwave_0.41.1_linux_amd64.tar.gz"
        sha256 "32f5a02cc285fbd7e28d6222bdc2d924b169ffc8dc81998e8d85d07a80b5ae5b"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.41.1/helmwave_0.41.1_linux_arm64.tar.gz"
        sha256 "6cb22815f9bf3b529c4ba97599da087dade664e59b0e6151a36100af6283781f"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
  end

  head "https://github.com/helmwave/helmwave.git", branch: "main"

  test do
    assert_match version.to_s, shell_output("#{bin/"helmwave"} --version")
  end
end

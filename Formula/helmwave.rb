# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Helmwave < Formula
  desc "Helmwave is true release management for helm"
  homepage "https://helmwave.app/"
  version "0.40.3"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.3/helmwave_0.40.3_darwin_amd64.tar.gz"
      sha256 "f0d097972f753fa2f54e38c25c2ebd73016ad876fa2015fd6fdedd32f24fc4e3"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
    on_arm do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.3/helmwave_0.40.3_darwin_arm64.tar.gz"
      sha256 "91a78ce84afcfecf6a978ee925d4dead7982f906c4fb719338d0cfdd04eba07c"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.3/helmwave_0.40.3_linux_amd64.tar.gz"
        sha256 "ba310a647f9db244af319d99c68a601d39490a182251376ff772ae14596969e7"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.3/helmwave_0.40.3_linux_arm64.tar.gz"
        sha256 "fc811c696342a0e03b507015546102aecf91379fd0e5422a28482c741808ec99"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
  end

  head "https://github.com/helmwave/helmwave.git", branch: "main"

  test do
    assert_match version.to_s, shell_output("#{bin/"helmwave"} --version")
  end
end

# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Helmwave < Formula
  desc "Helmwave is true release management for helm"
  homepage "https://helmwave.app/"
  version "0.40.2"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.2/helmwave_0.40.2_darwin_amd64.tar.gz"
      sha256 "bfd2350ad72c002587af144f8e99d3fe9d4849fcfbc430aeb40d90c8c6a650f6"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
    on_arm do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.2/helmwave_0.40.2_darwin_arm64.tar.gz"
      sha256 "81b6d223c5a5a0480b5eefd97082edfee8e82bc88e4c85d78d857cde449691b4"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.2/helmwave_0.40.2_linux_amd64.tar.gz"
        sha256 "af59e898948c1bd4affcae63c562b5d44d1a88fa8a91990412cb77e942b33df5"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.2/helmwave_0.40.2_linux_arm64.tar.gz"
        sha256 "25124ba2d112a6e0b84c01797e7b205329957a8510c1bb8b5864819b5142871d"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
  end

  head "https://github.com/helmwave/helmwave.git", branch: "main"

  test do
    assert_match version.to_s, shell_output("#{bin/"helmwave"} --version")
  end
end

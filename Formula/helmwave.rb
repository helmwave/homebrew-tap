# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Helmwave < Formula
  desc "Helmwave is true release management for helm"
  homepage "https://helmwave.app/"
  version "0.40.6"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.6/helmwave_0.40.6_darwin_amd64.tar.gz"
      sha256 "70b84263910fea9e5fbdf60383efe23f76c7906e6d894ca8cbf6ab63ef3821c0"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
    on_arm do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.6/helmwave_0.40.6_darwin_arm64.tar.gz"
      sha256 "750598b4a2935470d236190162cf3648804693740e18b9b12c8b9f31080d39c9"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.6/helmwave_0.40.6_linux_amd64.tar.gz"
        sha256 "1cb408e651ec668584241507b68f56bc605ed4eba2b46b65bc37adcb41c7b5aa"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.6/helmwave_0.40.6_linux_arm64.tar.gz"
        sha256 "32d0bee6537264fc37fadb36d2de626039b01d087c8766479f5fbb0d9939df0a"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
  end

  head "https://github.com/helmwave/helmwave.git", branch: "main"

  test do
    assert_match version.to_s, shell_output("#{bin/"helmwave"} --version")
  end
end

# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Helmwave < Formula
  desc "Helmwave is true release management for helm"
  homepage "https://helmwave.app/"
  version "0.40.4"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.4/helmwave_0.40.4_darwin_amd64   '.tar.gz"
      sha256 "16fa9fe196df99e5acf37de487b491f7c58eedaab9776182b15df71e9977bbb2"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
    on_arm do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.4/helmwave_0.40.4_darwin_arm64   '.tar.gz"
      sha256 "06a542b6039ce4b246ecc325fa6f318a4035c8c4113abb286523e6babdc8ad9b"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.4/helmwave_0.40.4_linux_amd64   '.tar.gz"
        sha256 "9d2b0973823e4d4a3143c0ece345852d97dc907148fbd7e8725450d99d929495"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.4/helmwave_0.40.4_linux_arm64   '.tar.gz"
        sha256 "cf30dd5afe7e8feceb01ffce9d7b4a6e104f1826a2a15317d1ae336d1b65b8b0"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
  end

  head "https://github.com/helmwave/helmwave.git", branch: "main"

  test do
    assert_match version.to_s, shell_output("#{bin/"helmwave"} --version")
  end
end

# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Helmwave < Formula
  desc "Helmwave is true release management for helm"
  homepage "https://helmwave.app/"
  version "0.40.7"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.7/helmwave_0.40.7_darwin_amd64.tar.gz"
      sha256 "7d2cc2e8d8da960e35204582da73dd045ca85a2255a97b1de5344d6154e30f4f"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
    on_arm do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.7/helmwave_0.40.7_darwin_arm64.tar.gz"
      sha256 "0423aad822c78e0094b7940f65ec58d517fb3b1e69fffe47da7e513baeed6303"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.7/helmwave_0.40.7_linux_amd64.tar.gz"
        sha256 "5889cdb8c7d811ff7babb3f5f60d8b6c2efb1e745e23032ba8bdff9f055aed78"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.7/helmwave_0.40.7_linux_arm64.tar.gz"
        sha256 "c35359e26afb980feb34217a65f5d5ffe61601821ebc8de9a99978286d6606f0"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
  end

  head "https://github.com/helmwave/helmwave.git", branch: "main"

  test do
    assert_match version.to_s, shell_output("#{bin/"helmwave"} --version")
  end
end

# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Helmwave < Formula
  desc "Helmwave is true release management for helm"
  homepage "https://helmwave.app/"
  version "0.40.5"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.5/helmwave_0.40.5_darwin_amd64.tar.gz"
      sha256 "0b73acbeb37ced6603a093a5cc835560d0b09b26344b0bc6ef1a6403448219a1"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
    on_arm do
      url "https://github.com/helmwave/helmwave/releases/download/v0.40.5/helmwave_0.40.5_darwin_arm64.tar.gz"
      sha256 "3d485cfaa9efaec051d778c65e004cbcd060567182d8897b7a7c4403c09d121f"

      def install
        bin.install "helmwave"
        generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.5/helmwave_0.40.5_linux_amd64.tar.gz"
        sha256 "10d4725dcd41367d11ab3a317e364eb8cb46909ff39eda5f04f3a7dd6c612aca"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/helmwave/helmwave/releases/download/v0.40.5/helmwave_0.40.5_linux_arm64.tar.gz"
        sha256 "3eceeb9c4a8659992b39697a5e86ede0dba99f71433e626761f677d1c5405992"

        def install
          bin.install "helmwave"
          generate_completions_from_executable(bin/"helmwave", "completion", shells: [:bash, :zsh])
        end
      end
    end
  end

  head "https://github.com/helmwave/helmwave.git", branch: "main"

  test do
    assert_match version.to_s, shell_output("#{bin/"helmwave"} --version")
  end
end
